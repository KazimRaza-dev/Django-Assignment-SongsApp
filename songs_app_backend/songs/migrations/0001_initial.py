# Generated by Django 4.2.2 on 2023-06-14 19:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], max_length=10)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_albums', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('singer', models.CharField(max_length=100)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='UserSongLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liking_users', to='songs.song')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_songs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSongFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_favorited', to='songs.song')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_songs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSongComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('song_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_commented', to='songs.song')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSongAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_songs', to='songs.album')),
                ('song_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_albums', to='songs.song')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs_in_albums', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFollowAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_following', to='songs.album')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed_albums', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
